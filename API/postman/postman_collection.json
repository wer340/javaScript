{
	"info": {
		"_postman_id": "791d6376-633c-4cdf-ab53-88bb75d4b3a6",
		"name": "simple book",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "21985831"
	},
	"item": [
		{
			"name": "status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const response=pm.response.json()\r",
							"console.log(response.status)\r",
							"pm.test(\"status should be 200 OK\",()=>{\r",
							"    pm.expect(200).to.eql(200)\r",
							"})\r",
							"postman.setNextRequest(\"single Book\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{endPoint}}status"
			},
			"response": []
		},
		{
			"name": "list books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const res=pm.response.json();\r",
							"const noti= res.filter((book)=> book.id===4)\r",
							"const book=noti[0]\r",
							"console.log(book)\r",
							"if(book){\r",
							"\r",
							"    pm.globals.set(\"bookId\", book.id);\r",
							"}\r",
							"pm.test(\"book is funded\",()=>{\r",
							"    pm.expect(book).to.be.an(\"object\")\r",
							"    pm.expect(book.available).to.be.true\r",
							"    pm.expect(book.available).to.be.eql(true)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{endPoint}}books"
			},
			"response": []
		},
		{
			"name": "single Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{endPoint}}books/1"
			},
			"response": []
		},
		{
			"name": "order book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{apiKey}}"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"bookId\":1,\r\n    \"customerName\":\"{{$randomFirstName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{endPoint}}orders"
			},
			"response": []
		},
		{
			"name": "Get All books order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				},
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{apiKey}}"
					}
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{endPoint}}orders"
			},
			"response": []
		},
		{
			"name": "get order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true,
					"user-agent": true,
					"accept": true,
					"accept-encoding": true,
					"connection": true
				},
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{apiKey}}"
					}
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{endPoint}}orders/:orderId",
					"host": [
						"{{endPoint}}orders"
					],
					"path": [
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "yiN4RkIEZkbkLBm4OCKbh"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update order",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true,
					"user-agent": true,
					"accept": true,
					"accept-encoding": true,
					"connection": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{apiKey}}"
					}
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n     \"customerName\": \"johan{{$randomLastName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{endPoint}}orders/:orderId",
					"host": [
						"{{endPoint}}orders"
					],
					"path": [
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "yiN4RkIEZkbkLBm4OCKbh"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"postman.setNextRequest(null)"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true,
					"user-agent": true,
					"accept": true,
					"accept-encoding": true,
					"connection": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{apiKey}}"
					}
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{endPoint}}orders/:orderId",
					"host": [
						"{{endPoint}}orders"
					],
					"path": [
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "F5S6p0UPF8DkBZzNUuT0D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "client api",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{apiKey}}"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"clientName\":\"scarlett\",\r\n\r\n\"clientEmail\":\"johanssons@example.com\"\r\n\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{endPoint}}api-clients/"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "endPoint",
			"value": "https://simple-books-api.glitch.me/"
		},
		{
			"key": "apiKey",
			"value": "64593f7b27137a1243455dc1eaa7c355e64c15a017eb8982db5d84896c50898f",
			"type": "string"
		}
	]
}