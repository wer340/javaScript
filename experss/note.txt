1---
https://stackoverflow.com/questions/54601233/vscode-emmet-html-boilerplate
boilateplate  > edit >expand abbrivition or tab
low level technology
the scop express very broad  DIY [do it yourself]
your save your time  10 time the amount of code that you have to write
programmer hate reptition
https://2021.stateofjs.com/en-US/libraries/back-end-frameworks/
big deal webdeveloper  communitty
2---
electron>atom .
https://expressjs.com/
express()  make object then listen method 
now a port is basically just a channel that we have tuned our server to
so for example sometimes i listen to radio and i tun my radio
 to listen to 104.9FM
and our server is just tuned into the channel 3000
now not much is happening here so let stop our server and we do that by going
into the command line  ctrl+c exit
so if we wanted to be  able to see when our port is set up and when our server
is runing we can add a callback function to this method 
//localhost:3000  can not get
so this [/] just represents localhost:3000/,which is the route or the home page
app.get
and this is a method thats provided by express that allow us to specify
what should happen when a browser gets in touch with our server a get request
first parameter it takes is  the location of the get request
parameter  callback  get > response request
 5---
route   root  simialar phonaticamrican
 nodeman package
contiuosly     cterl+c and node server.js    use nodeman package
https://nodemon.io/    npm install -g nodemon

Automatic restarting of application
6---
calculator

now in the process of building this we are going to get to create our very 
first web appliction and its not just a web site anymore up till now 
we have only been making essentially static website right where our 
browser will make a to request to the server and the server sends back
css html js  file and if there is any js code that needs to be run 
it gets run on the client side basically our user browser and that js gets sents 
to the browser and run when the user load up website
in this lesson we are going to be making our code run server side
so when our web site makes a request to our server  its going to excute the code
and only deliver the outcome back to the user doesnt get to see any of code
and logic of our calculator
user doesnt get to see any of code and logic of our calculator
it s all done on a server
https://expressjs.com/en/4x/api.html#res.sendFile
get("/"(req,res)=>{res.sendFile("index.html")}
location of file
now what we have been working with so far what are called relative file path
so we can simply  say index.html and it will go and search within the current
file s location so calculator.js and look for something called index.html
now this works a little bit differebtly when you have a server because 
your server at the moment even though its hosted on our own computer
and we know exactly where this calculator project folder reside it s basicly
on our desktop but in  the future when we deploy our server into the cloud
or somebody else computer then we have no idea what is that location 
so instead of just sending a relative file path what we can do is we can use
a constant thats called __dir or directory name
if console.log(__dirname) full path  give fille file path of the current folder
current file loacation
/users/namepc/...

10---
inspect > network  > All tab selected 
form method post   type submit  
action not exist  send for post   wrong way action="index.html"> route server> action="/"  for root

alot of compony and website pride themselves on how thwy design their 
404 site and that just goes to show how often this happen
now  if you interested in a redacted but slightly rude version of how http
return codes work then its  basically if its in the s it mean hold on 
something going to happen the 200 mean here you go this is usually a
successful request 300 mean go away there s some security involved 400s
mean scewed up 


